[tox]
envlist = py38-{core,contrib,apache,aws,gcloud,postgres,unixsocket,azureblob,dropbox}, visualiser, docs, flake8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
deps =
    postgres: psycopg2
    gcloud: google-api-python-client
    gcloud: google-auth
    gcloud: google-auth-httplib2
    unixsocket: requests-unixsocket
    dropbox: dropbox
    -r{toxinidir}/requirements/test.txt
passenv =
    USER JAVA_HOME POSTGRES_USER DATAPROC_TEST_PROJECT_ID GCS_TEST_PROJECT_ID GCS_TEST_BUCKET GOOGLE_APPLICATION_CREDENTIALS TRAVIS_BUILD_ID TRAVIS TRAVIS_BRANCH TRAVIS_JOB_NUMBER TRAVIS_PULL_REQUEST TRAVIS_JOB_ID TRAVIS_REPO_SLUG TRAVIS_COMMIT CI DROPBOX_APP_TOKEN
setenv =
    LC_ALL = en_US.utf-8
    cdh: HADOOP_DISTRO=cdh
    cdh: HADOOP_HOME={toxinidir}/.tox/hadoop-cdh
    hdp: HADOOP_DISTRO=hdp
    hdp: HADOOP_HOME={toxinidir}/.tox/hadoop-hdp
    contrib: NOSE_ATTR=contrib
    apache: NOSE_ATTR=apache
    aws: NOSE_ATTR=aws
    postgres: NOSE_ATTR=postgres
    scheduler: NOSE_ATTR=scheduler
    cdh,hdp: NOSE_ATTR=minicluster
    gcloud: NOSE_ATTR=gcloud
    unixsocket: NOSE_ATTR=unixsocket
    dropbox: NOSE_ATTR=dropbox
    azureblob: NOSE_ATTR=azureblob
    core: NOSE_EVAL_ATTR=not minicluster and not gcloud and not postgres and not unixsocket and not contrib and not apache and not aws and not azureblob and not dropbox
    LUIGI_CONFIG_PATH={toxinidir}/test/testconfig/luigi.cfg
    COVERAGE_PROCESS_START={toxinidir}/.coveragerc
    FULL_COVERAGE=true
    core: NOSE_WITH_DOCTEST=1
    AWS_DEFAULT_REGION=us-east-1
    AWS_ACCESS_KEY_ID=accesskey
    AWS_SECRET_ACCESS_KEY=secretkey
commands =
    cdh,hdp: {toxinidir}/scripts/ci/setup_hadoop_env.sh
    azureblob: {toxinidir}/scripts/ci/install_start_azurite.sh {toxinidir}/scripts/ci
    python --version
    coverage run test/runtests.py -v --ignore-files='(^\.|^_|^setup\.py$)' \
    {posargs:}
    coverage combine
    codecov -e TOXENV
    azureblob: {toxinidir}/scripts/ci/stop_azurite.sh

[testenv:visualiser]
usedevelop = True
deps =
   -r{toxinidir}/requirements/test.txt
passenv = {[testenv]passenv}
setenv =
    LC_ALL = en_US.utf-8
    NOSE_EVAL_ATTR=not minicluster and not gcloud and not postgres and not unixsocket
    LUIGI_CONFIG_PATH={toxinidir}/test/testconfig/luigi.cfg
    TEST_VISUALISER=1
commands =
    python --version
    nosetests -v --tests=test/visualiser

# Flake8 Configuration, inspired from https://gitlab.com/pycqa/flake8/blob/master/tox.ini
# By putting it here, local flake8 runs will also pick it up.
[flake8]
max-line-length = 160
builtins = unicode

[testenv:flake8]
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    flake8 --exclude=doc,.tox
    flake8 --max-line-length=100 --ignore=E265 doc

[testenv:isort]
deps = -r{toxinidir}/requirements/quality.txt
commands = isort -w 120 -rc luigi test examples bin

[testenv:docs]
# Build documentation using sphinx.
# Call this using `tox -e docs`.
deps =
    -r{toxinidir}/requirements/doc.txt
commands =
# build API docs
    sphinx-apidoc -o doc/api -T luigi --separate

# build HTML docs
    sphinx-build -W -b html -d {envtmpdir}/doctrees doc doc/_build/html
